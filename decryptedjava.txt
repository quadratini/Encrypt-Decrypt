/*
* This program asks the user the name 
* of a file they want encrypted or decrypted.
* It then prompts them to enter the output file.
* Then asks them if they want the file
* they inputted to be encrypted/decrypted.
* outputs file to the outputfile named.
*
* @author Ronny Ritprasert
* @verison 03/17/2019
*
*/
import java.util.Scanner;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.FileOutputStream;

public class Encrypt {
    
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        Scanner fileIn = null;
        PrintStream out = null;
        
        System.out.println("File to encrypt/decrypt:");
        String fileName = in.next();
        System.out.println("Output File:");
        String outFile = in.next();
        
        try {
            fileIn = new Scanner(new File(fileName));
            out = new PrintStream(new FileOutputStream(outFile));            
        } catch(Exception e) {
            System.out.print("dang");
        }
        System.out.println("Encrypt or decrypt?");
        String ende = in.next();
        
        String s = encryptFile(fileIn, ende);
        
        System.setOut(out);
        System.out.println(s);
    }
    
    public static String encryptFile(Scanner fileIn, String ende) {
        String encrypted = "";
        while (fileIn.hasNextLine()) {
            String line = fileIn.nextLine();
            String newWord = encrypt(line, ende);
            encrypted += newWord;
        }
        return encrypted;
    }
   
    public static String encrypt(String line, String ende) {
        String encrypted = "";
        for (int i = 0; i < line.length(); i++) {
            char c = line.charAt(i);
            if (c == ' ' || c == '\n' || c == '\t') { 
                encrypted += (char)c;    // CAST TO CHAR or else "lossy conversion"
            }  else if (ende.equalsIgnoreCase("encrypt")) {
                encrypted += (char)(c + 1);
            } else {
                encrypted += (char)(c - 1);
            }             
        }
        return encrypted + "\n";
    }  
}


